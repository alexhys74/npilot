#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7152185926377700488) {
   out_7152185926377700488[0] = 0;
   out_7152185926377700488[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7152185926377700488[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7152185926377700488[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7152185926377700488[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7152185926377700488[5] = -sin(in_vec[1]);
   out_7152185926377700488[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7152185926377700488[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7152185926377700488[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7152185926377700488[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7152185926377700488[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7152185926377700488[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7152185926377700488[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7152185926377700488[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7152185926377700488[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7152185926377700488[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7152185926377700488[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7152185926377700488[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3950646692998680769) {
   out_3950646692998680769[0] = delta_x[0] + nom_x[0];
   out_3950646692998680769[1] = delta_x[1] + nom_x[1];
   out_3950646692998680769[2] = delta_x[2] + nom_x[2];
   out_3950646692998680769[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3950646692998680769[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3950646692998680769[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3950646692998680769[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3950646692998680769[7] = delta_x[6] + nom_x[7];
   out_3950646692998680769[8] = delta_x[7] + nom_x[8];
   out_3950646692998680769[9] = delta_x[8] + nom_x[9];
   out_3950646692998680769[10] = delta_x[9] + nom_x[10];
   out_3950646692998680769[11] = delta_x[10] + nom_x[11];
   out_3950646692998680769[12] = delta_x[11] + nom_x[12];
   out_3950646692998680769[13] = delta_x[12] + nom_x[13];
   out_3950646692998680769[14] = delta_x[13] + nom_x[14];
   out_3950646692998680769[15] = delta_x[14] + nom_x[15];
   out_3950646692998680769[16] = delta_x[15] + nom_x[16];
   out_3950646692998680769[17] = delta_x[16] + nom_x[17];
   out_3950646692998680769[18] = delta_x[17] + nom_x[18];
   out_3950646692998680769[19] = delta_x[18] + nom_x[19];
   out_3950646692998680769[20] = delta_x[19] + nom_x[20];
   out_3950646692998680769[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3626463882087283498) {
   out_3626463882087283498[0] = -nom_x[0] + true_x[0];
   out_3626463882087283498[1] = -nom_x[1] + true_x[1];
   out_3626463882087283498[2] = -nom_x[2] + true_x[2];
   out_3626463882087283498[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3626463882087283498[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3626463882087283498[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3626463882087283498[6] = -nom_x[7] + true_x[7];
   out_3626463882087283498[7] = -nom_x[8] + true_x[8];
   out_3626463882087283498[8] = -nom_x[9] + true_x[9];
   out_3626463882087283498[9] = -nom_x[10] + true_x[10];
   out_3626463882087283498[10] = -nom_x[11] + true_x[11];
   out_3626463882087283498[11] = -nom_x[12] + true_x[12];
   out_3626463882087283498[12] = -nom_x[13] + true_x[13];
   out_3626463882087283498[13] = -nom_x[14] + true_x[14];
   out_3626463882087283498[14] = -nom_x[15] + true_x[15];
   out_3626463882087283498[15] = -nom_x[16] + true_x[16];
   out_3626463882087283498[16] = -nom_x[17] + true_x[17];
   out_3626463882087283498[17] = -nom_x[18] + true_x[18];
   out_3626463882087283498[18] = -nom_x[19] + true_x[19];
   out_3626463882087283498[19] = -nom_x[20] + true_x[20];
   out_3626463882087283498[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7313751890375090654) {
   out_7313751890375090654[0] = 1.0;
   out_7313751890375090654[1] = 0;
   out_7313751890375090654[2] = 0;
   out_7313751890375090654[3] = 0;
   out_7313751890375090654[4] = 0;
   out_7313751890375090654[5] = 0;
   out_7313751890375090654[6] = 0;
   out_7313751890375090654[7] = 0;
   out_7313751890375090654[8] = 0;
   out_7313751890375090654[9] = 0;
   out_7313751890375090654[10] = 0;
   out_7313751890375090654[11] = 0;
   out_7313751890375090654[12] = 0;
   out_7313751890375090654[13] = 0;
   out_7313751890375090654[14] = 0;
   out_7313751890375090654[15] = 0;
   out_7313751890375090654[16] = 0;
   out_7313751890375090654[17] = 0;
   out_7313751890375090654[18] = 0;
   out_7313751890375090654[19] = 0;
   out_7313751890375090654[20] = 0;
   out_7313751890375090654[21] = 0;
   out_7313751890375090654[22] = 1.0;
   out_7313751890375090654[23] = 0;
   out_7313751890375090654[24] = 0;
   out_7313751890375090654[25] = 0;
   out_7313751890375090654[26] = 0;
   out_7313751890375090654[27] = 0;
   out_7313751890375090654[28] = 0;
   out_7313751890375090654[29] = 0;
   out_7313751890375090654[30] = 0;
   out_7313751890375090654[31] = 0;
   out_7313751890375090654[32] = 0;
   out_7313751890375090654[33] = 0;
   out_7313751890375090654[34] = 0;
   out_7313751890375090654[35] = 0;
   out_7313751890375090654[36] = 0;
   out_7313751890375090654[37] = 0;
   out_7313751890375090654[38] = 0;
   out_7313751890375090654[39] = 0;
   out_7313751890375090654[40] = 0;
   out_7313751890375090654[41] = 0;
   out_7313751890375090654[42] = 0;
   out_7313751890375090654[43] = 0;
   out_7313751890375090654[44] = 1.0;
   out_7313751890375090654[45] = 0;
   out_7313751890375090654[46] = 0;
   out_7313751890375090654[47] = 0;
   out_7313751890375090654[48] = 0;
   out_7313751890375090654[49] = 0;
   out_7313751890375090654[50] = 0;
   out_7313751890375090654[51] = 0;
   out_7313751890375090654[52] = 0;
   out_7313751890375090654[53] = 0;
   out_7313751890375090654[54] = 0;
   out_7313751890375090654[55] = 0;
   out_7313751890375090654[56] = 0;
   out_7313751890375090654[57] = 0;
   out_7313751890375090654[58] = 0;
   out_7313751890375090654[59] = 0;
   out_7313751890375090654[60] = 0;
   out_7313751890375090654[61] = 0;
   out_7313751890375090654[62] = 0;
   out_7313751890375090654[63] = 0;
   out_7313751890375090654[64] = 0;
   out_7313751890375090654[65] = 0;
   out_7313751890375090654[66] = -0.5*state[4];
   out_7313751890375090654[67] = -0.5*state[5];
   out_7313751890375090654[68] = -0.5*state[6];
   out_7313751890375090654[69] = 0;
   out_7313751890375090654[70] = 0;
   out_7313751890375090654[71] = 0;
   out_7313751890375090654[72] = 0;
   out_7313751890375090654[73] = 0;
   out_7313751890375090654[74] = 0;
   out_7313751890375090654[75] = 0;
   out_7313751890375090654[76] = 0;
   out_7313751890375090654[77] = 0;
   out_7313751890375090654[78] = 0;
   out_7313751890375090654[79] = 0;
   out_7313751890375090654[80] = 0;
   out_7313751890375090654[81] = 0;
   out_7313751890375090654[82] = 0;
   out_7313751890375090654[83] = 0;
   out_7313751890375090654[84] = 0;
   out_7313751890375090654[85] = 0;
   out_7313751890375090654[86] = 0;
   out_7313751890375090654[87] = 0.5*state[3];
   out_7313751890375090654[88] = 0.5*state[6];
   out_7313751890375090654[89] = -0.5*state[5];
   out_7313751890375090654[90] = 0;
   out_7313751890375090654[91] = 0;
   out_7313751890375090654[92] = 0;
   out_7313751890375090654[93] = 0;
   out_7313751890375090654[94] = 0;
   out_7313751890375090654[95] = 0;
   out_7313751890375090654[96] = 0;
   out_7313751890375090654[97] = 0;
   out_7313751890375090654[98] = 0;
   out_7313751890375090654[99] = 0;
   out_7313751890375090654[100] = 0;
   out_7313751890375090654[101] = 0;
   out_7313751890375090654[102] = 0;
   out_7313751890375090654[103] = 0;
   out_7313751890375090654[104] = 0;
   out_7313751890375090654[105] = 0;
   out_7313751890375090654[106] = 0;
   out_7313751890375090654[107] = 0;
   out_7313751890375090654[108] = -0.5*state[6];
   out_7313751890375090654[109] = 0.5*state[3];
   out_7313751890375090654[110] = 0.5*state[4];
   out_7313751890375090654[111] = 0;
   out_7313751890375090654[112] = 0;
   out_7313751890375090654[113] = 0;
   out_7313751890375090654[114] = 0;
   out_7313751890375090654[115] = 0;
   out_7313751890375090654[116] = 0;
   out_7313751890375090654[117] = 0;
   out_7313751890375090654[118] = 0;
   out_7313751890375090654[119] = 0;
   out_7313751890375090654[120] = 0;
   out_7313751890375090654[121] = 0;
   out_7313751890375090654[122] = 0;
   out_7313751890375090654[123] = 0;
   out_7313751890375090654[124] = 0;
   out_7313751890375090654[125] = 0;
   out_7313751890375090654[126] = 0;
   out_7313751890375090654[127] = 0;
   out_7313751890375090654[128] = 0;
   out_7313751890375090654[129] = 0.5*state[5];
   out_7313751890375090654[130] = -0.5*state[4];
   out_7313751890375090654[131] = 0.5*state[3];
   out_7313751890375090654[132] = 0;
   out_7313751890375090654[133] = 0;
   out_7313751890375090654[134] = 0;
   out_7313751890375090654[135] = 0;
   out_7313751890375090654[136] = 0;
   out_7313751890375090654[137] = 0;
   out_7313751890375090654[138] = 0;
   out_7313751890375090654[139] = 0;
   out_7313751890375090654[140] = 0;
   out_7313751890375090654[141] = 0;
   out_7313751890375090654[142] = 0;
   out_7313751890375090654[143] = 0;
   out_7313751890375090654[144] = 0;
   out_7313751890375090654[145] = 0;
   out_7313751890375090654[146] = 0;
   out_7313751890375090654[147] = 0;
   out_7313751890375090654[148] = 0;
   out_7313751890375090654[149] = 0;
   out_7313751890375090654[150] = 0;
   out_7313751890375090654[151] = 0;
   out_7313751890375090654[152] = 0;
   out_7313751890375090654[153] = 1.0;
   out_7313751890375090654[154] = 0;
   out_7313751890375090654[155] = 0;
   out_7313751890375090654[156] = 0;
   out_7313751890375090654[157] = 0;
   out_7313751890375090654[158] = 0;
   out_7313751890375090654[159] = 0;
   out_7313751890375090654[160] = 0;
   out_7313751890375090654[161] = 0;
   out_7313751890375090654[162] = 0;
   out_7313751890375090654[163] = 0;
   out_7313751890375090654[164] = 0;
   out_7313751890375090654[165] = 0;
   out_7313751890375090654[166] = 0;
   out_7313751890375090654[167] = 0;
   out_7313751890375090654[168] = 0;
   out_7313751890375090654[169] = 0;
   out_7313751890375090654[170] = 0;
   out_7313751890375090654[171] = 0;
   out_7313751890375090654[172] = 0;
   out_7313751890375090654[173] = 0;
   out_7313751890375090654[174] = 0;
   out_7313751890375090654[175] = 1.0;
   out_7313751890375090654[176] = 0;
   out_7313751890375090654[177] = 0;
   out_7313751890375090654[178] = 0;
   out_7313751890375090654[179] = 0;
   out_7313751890375090654[180] = 0;
   out_7313751890375090654[181] = 0;
   out_7313751890375090654[182] = 0;
   out_7313751890375090654[183] = 0;
   out_7313751890375090654[184] = 0;
   out_7313751890375090654[185] = 0;
   out_7313751890375090654[186] = 0;
   out_7313751890375090654[187] = 0;
   out_7313751890375090654[188] = 0;
   out_7313751890375090654[189] = 0;
   out_7313751890375090654[190] = 0;
   out_7313751890375090654[191] = 0;
   out_7313751890375090654[192] = 0;
   out_7313751890375090654[193] = 0;
   out_7313751890375090654[194] = 0;
   out_7313751890375090654[195] = 0;
   out_7313751890375090654[196] = 0;
   out_7313751890375090654[197] = 1.0;
   out_7313751890375090654[198] = 0;
   out_7313751890375090654[199] = 0;
   out_7313751890375090654[200] = 0;
   out_7313751890375090654[201] = 0;
   out_7313751890375090654[202] = 0;
   out_7313751890375090654[203] = 0;
   out_7313751890375090654[204] = 0;
   out_7313751890375090654[205] = 0;
   out_7313751890375090654[206] = 0;
   out_7313751890375090654[207] = 0;
   out_7313751890375090654[208] = 0;
   out_7313751890375090654[209] = 0;
   out_7313751890375090654[210] = 0;
   out_7313751890375090654[211] = 0;
   out_7313751890375090654[212] = 0;
   out_7313751890375090654[213] = 0;
   out_7313751890375090654[214] = 0;
   out_7313751890375090654[215] = 0;
   out_7313751890375090654[216] = 0;
   out_7313751890375090654[217] = 0;
   out_7313751890375090654[218] = 0;
   out_7313751890375090654[219] = 1.0;
   out_7313751890375090654[220] = 0;
   out_7313751890375090654[221] = 0;
   out_7313751890375090654[222] = 0;
   out_7313751890375090654[223] = 0;
   out_7313751890375090654[224] = 0;
   out_7313751890375090654[225] = 0;
   out_7313751890375090654[226] = 0;
   out_7313751890375090654[227] = 0;
   out_7313751890375090654[228] = 0;
   out_7313751890375090654[229] = 0;
   out_7313751890375090654[230] = 0;
   out_7313751890375090654[231] = 0;
   out_7313751890375090654[232] = 0;
   out_7313751890375090654[233] = 0;
   out_7313751890375090654[234] = 0;
   out_7313751890375090654[235] = 0;
   out_7313751890375090654[236] = 0;
   out_7313751890375090654[237] = 0;
   out_7313751890375090654[238] = 0;
   out_7313751890375090654[239] = 0;
   out_7313751890375090654[240] = 0;
   out_7313751890375090654[241] = 1.0;
   out_7313751890375090654[242] = 0;
   out_7313751890375090654[243] = 0;
   out_7313751890375090654[244] = 0;
   out_7313751890375090654[245] = 0;
   out_7313751890375090654[246] = 0;
   out_7313751890375090654[247] = 0;
   out_7313751890375090654[248] = 0;
   out_7313751890375090654[249] = 0;
   out_7313751890375090654[250] = 0;
   out_7313751890375090654[251] = 0;
   out_7313751890375090654[252] = 0;
   out_7313751890375090654[253] = 0;
   out_7313751890375090654[254] = 0;
   out_7313751890375090654[255] = 0;
   out_7313751890375090654[256] = 0;
   out_7313751890375090654[257] = 0;
   out_7313751890375090654[258] = 0;
   out_7313751890375090654[259] = 0;
   out_7313751890375090654[260] = 0;
   out_7313751890375090654[261] = 0;
   out_7313751890375090654[262] = 0;
   out_7313751890375090654[263] = 1.0;
   out_7313751890375090654[264] = 0;
   out_7313751890375090654[265] = 0;
   out_7313751890375090654[266] = 0;
   out_7313751890375090654[267] = 0;
   out_7313751890375090654[268] = 0;
   out_7313751890375090654[269] = 0;
   out_7313751890375090654[270] = 0;
   out_7313751890375090654[271] = 0;
   out_7313751890375090654[272] = 0;
   out_7313751890375090654[273] = 0;
   out_7313751890375090654[274] = 0;
   out_7313751890375090654[275] = 0;
   out_7313751890375090654[276] = 0;
   out_7313751890375090654[277] = 0;
   out_7313751890375090654[278] = 0;
   out_7313751890375090654[279] = 0;
   out_7313751890375090654[280] = 0;
   out_7313751890375090654[281] = 0;
   out_7313751890375090654[282] = 0;
   out_7313751890375090654[283] = 0;
   out_7313751890375090654[284] = 0;
   out_7313751890375090654[285] = 1.0;
   out_7313751890375090654[286] = 0;
   out_7313751890375090654[287] = 0;
   out_7313751890375090654[288] = 0;
   out_7313751890375090654[289] = 0;
   out_7313751890375090654[290] = 0;
   out_7313751890375090654[291] = 0;
   out_7313751890375090654[292] = 0;
   out_7313751890375090654[293] = 0;
   out_7313751890375090654[294] = 0;
   out_7313751890375090654[295] = 0;
   out_7313751890375090654[296] = 0;
   out_7313751890375090654[297] = 0;
   out_7313751890375090654[298] = 0;
   out_7313751890375090654[299] = 0;
   out_7313751890375090654[300] = 0;
   out_7313751890375090654[301] = 0;
   out_7313751890375090654[302] = 0;
   out_7313751890375090654[303] = 0;
   out_7313751890375090654[304] = 0;
   out_7313751890375090654[305] = 0;
   out_7313751890375090654[306] = 0;
   out_7313751890375090654[307] = 1.0;
   out_7313751890375090654[308] = 0;
   out_7313751890375090654[309] = 0;
   out_7313751890375090654[310] = 0;
   out_7313751890375090654[311] = 0;
   out_7313751890375090654[312] = 0;
   out_7313751890375090654[313] = 0;
   out_7313751890375090654[314] = 0;
   out_7313751890375090654[315] = 0;
   out_7313751890375090654[316] = 0;
   out_7313751890375090654[317] = 0;
   out_7313751890375090654[318] = 0;
   out_7313751890375090654[319] = 0;
   out_7313751890375090654[320] = 0;
   out_7313751890375090654[321] = 0;
   out_7313751890375090654[322] = 0;
   out_7313751890375090654[323] = 0;
   out_7313751890375090654[324] = 0;
   out_7313751890375090654[325] = 0;
   out_7313751890375090654[326] = 0;
   out_7313751890375090654[327] = 0;
   out_7313751890375090654[328] = 0;
   out_7313751890375090654[329] = 1.0;
   out_7313751890375090654[330] = 0;
   out_7313751890375090654[331] = 0;
   out_7313751890375090654[332] = 0;
   out_7313751890375090654[333] = 0;
   out_7313751890375090654[334] = 0;
   out_7313751890375090654[335] = 0;
   out_7313751890375090654[336] = 0;
   out_7313751890375090654[337] = 0;
   out_7313751890375090654[338] = 0;
   out_7313751890375090654[339] = 0;
   out_7313751890375090654[340] = 0;
   out_7313751890375090654[341] = 0;
   out_7313751890375090654[342] = 0;
   out_7313751890375090654[343] = 0;
   out_7313751890375090654[344] = 0;
   out_7313751890375090654[345] = 0;
   out_7313751890375090654[346] = 0;
   out_7313751890375090654[347] = 0;
   out_7313751890375090654[348] = 0;
   out_7313751890375090654[349] = 0;
   out_7313751890375090654[350] = 0;
   out_7313751890375090654[351] = 1.0;
   out_7313751890375090654[352] = 0;
   out_7313751890375090654[353] = 0;
   out_7313751890375090654[354] = 0;
   out_7313751890375090654[355] = 0;
   out_7313751890375090654[356] = 0;
   out_7313751890375090654[357] = 0;
   out_7313751890375090654[358] = 0;
   out_7313751890375090654[359] = 0;
   out_7313751890375090654[360] = 0;
   out_7313751890375090654[361] = 0;
   out_7313751890375090654[362] = 0;
   out_7313751890375090654[363] = 0;
   out_7313751890375090654[364] = 0;
   out_7313751890375090654[365] = 0;
   out_7313751890375090654[366] = 0;
   out_7313751890375090654[367] = 0;
   out_7313751890375090654[368] = 0;
   out_7313751890375090654[369] = 0;
   out_7313751890375090654[370] = 0;
   out_7313751890375090654[371] = 0;
   out_7313751890375090654[372] = 0;
   out_7313751890375090654[373] = 1.0;
   out_7313751890375090654[374] = 0;
   out_7313751890375090654[375] = 0;
   out_7313751890375090654[376] = 0;
   out_7313751890375090654[377] = 0;
   out_7313751890375090654[378] = 0;
   out_7313751890375090654[379] = 0;
   out_7313751890375090654[380] = 0;
   out_7313751890375090654[381] = 0;
   out_7313751890375090654[382] = 0;
   out_7313751890375090654[383] = 0;
   out_7313751890375090654[384] = 0;
   out_7313751890375090654[385] = 0;
   out_7313751890375090654[386] = 0;
   out_7313751890375090654[387] = 0;
   out_7313751890375090654[388] = 0;
   out_7313751890375090654[389] = 0;
   out_7313751890375090654[390] = 0;
   out_7313751890375090654[391] = 0;
   out_7313751890375090654[392] = 0;
   out_7313751890375090654[393] = 0;
   out_7313751890375090654[394] = 0;
   out_7313751890375090654[395] = 1.0;
   out_7313751890375090654[396] = 0;
   out_7313751890375090654[397] = 0;
   out_7313751890375090654[398] = 0;
   out_7313751890375090654[399] = 0;
   out_7313751890375090654[400] = 0;
   out_7313751890375090654[401] = 0;
   out_7313751890375090654[402] = 0;
   out_7313751890375090654[403] = 0;
   out_7313751890375090654[404] = 0;
   out_7313751890375090654[405] = 0;
   out_7313751890375090654[406] = 0;
   out_7313751890375090654[407] = 0;
   out_7313751890375090654[408] = 0;
   out_7313751890375090654[409] = 0;
   out_7313751890375090654[410] = 0;
   out_7313751890375090654[411] = 0;
   out_7313751890375090654[412] = 0;
   out_7313751890375090654[413] = 0;
   out_7313751890375090654[414] = 0;
   out_7313751890375090654[415] = 0;
   out_7313751890375090654[416] = 0;
   out_7313751890375090654[417] = 1.0;
   out_7313751890375090654[418] = 0;
   out_7313751890375090654[419] = 0;
   out_7313751890375090654[420] = 0;
   out_7313751890375090654[421] = 0;
   out_7313751890375090654[422] = 0;
   out_7313751890375090654[423] = 0;
   out_7313751890375090654[424] = 0;
   out_7313751890375090654[425] = 0;
   out_7313751890375090654[426] = 0;
   out_7313751890375090654[427] = 0;
   out_7313751890375090654[428] = 0;
   out_7313751890375090654[429] = 0;
   out_7313751890375090654[430] = 0;
   out_7313751890375090654[431] = 0;
   out_7313751890375090654[432] = 0;
   out_7313751890375090654[433] = 0;
   out_7313751890375090654[434] = 0;
   out_7313751890375090654[435] = 0;
   out_7313751890375090654[436] = 0;
   out_7313751890375090654[437] = 0;
   out_7313751890375090654[438] = 0;
   out_7313751890375090654[439] = 1.0;
   out_7313751890375090654[440] = 0;
   out_7313751890375090654[441] = 0;
   out_7313751890375090654[442] = 0;
   out_7313751890375090654[443] = 0;
   out_7313751890375090654[444] = 0;
   out_7313751890375090654[445] = 0;
   out_7313751890375090654[446] = 0;
   out_7313751890375090654[447] = 0;
   out_7313751890375090654[448] = 0;
   out_7313751890375090654[449] = 0;
   out_7313751890375090654[450] = 0;
   out_7313751890375090654[451] = 0;
   out_7313751890375090654[452] = 0;
   out_7313751890375090654[453] = 0;
   out_7313751890375090654[454] = 0;
   out_7313751890375090654[455] = 0;
   out_7313751890375090654[456] = 0;
   out_7313751890375090654[457] = 0;
   out_7313751890375090654[458] = 0;
   out_7313751890375090654[459] = 0;
   out_7313751890375090654[460] = 0;
   out_7313751890375090654[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3447414059194549864) {
   out_3447414059194549864[0] = dt*state[7] + state[0];
   out_3447414059194549864[1] = dt*state[8] + state[1];
   out_3447414059194549864[2] = dt*state[9] + state[2];
   out_3447414059194549864[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3447414059194549864[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3447414059194549864[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3447414059194549864[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3447414059194549864[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3447414059194549864[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3447414059194549864[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3447414059194549864[10] = state[10];
   out_3447414059194549864[11] = state[11];
   out_3447414059194549864[12] = state[12];
   out_3447414059194549864[13] = state[13];
   out_3447414059194549864[14] = state[14];
   out_3447414059194549864[15] = state[15];
   out_3447414059194549864[16] = state[16];
   out_3447414059194549864[17] = state[17];
   out_3447414059194549864[18] = state[18];
   out_3447414059194549864[19] = state[19];
   out_3447414059194549864[20] = state[20];
   out_3447414059194549864[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5197492253302578706) {
   out_5197492253302578706[0] = 1;
   out_5197492253302578706[1] = 0;
   out_5197492253302578706[2] = 0;
   out_5197492253302578706[3] = 0;
   out_5197492253302578706[4] = 0;
   out_5197492253302578706[5] = 0;
   out_5197492253302578706[6] = dt;
   out_5197492253302578706[7] = 0;
   out_5197492253302578706[8] = 0;
   out_5197492253302578706[9] = 0;
   out_5197492253302578706[10] = 0;
   out_5197492253302578706[11] = 0;
   out_5197492253302578706[12] = 0;
   out_5197492253302578706[13] = 0;
   out_5197492253302578706[14] = 0;
   out_5197492253302578706[15] = 0;
   out_5197492253302578706[16] = 0;
   out_5197492253302578706[17] = 0;
   out_5197492253302578706[18] = 0;
   out_5197492253302578706[19] = 0;
   out_5197492253302578706[20] = 0;
   out_5197492253302578706[21] = 0;
   out_5197492253302578706[22] = 1;
   out_5197492253302578706[23] = 0;
   out_5197492253302578706[24] = 0;
   out_5197492253302578706[25] = 0;
   out_5197492253302578706[26] = 0;
   out_5197492253302578706[27] = 0;
   out_5197492253302578706[28] = dt;
   out_5197492253302578706[29] = 0;
   out_5197492253302578706[30] = 0;
   out_5197492253302578706[31] = 0;
   out_5197492253302578706[32] = 0;
   out_5197492253302578706[33] = 0;
   out_5197492253302578706[34] = 0;
   out_5197492253302578706[35] = 0;
   out_5197492253302578706[36] = 0;
   out_5197492253302578706[37] = 0;
   out_5197492253302578706[38] = 0;
   out_5197492253302578706[39] = 0;
   out_5197492253302578706[40] = 0;
   out_5197492253302578706[41] = 0;
   out_5197492253302578706[42] = 0;
   out_5197492253302578706[43] = 0;
   out_5197492253302578706[44] = 1;
   out_5197492253302578706[45] = 0;
   out_5197492253302578706[46] = 0;
   out_5197492253302578706[47] = 0;
   out_5197492253302578706[48] = 0;
   out_5197492253302578706[49] = 0;
   out_5197492253302578706[50] = dt;
   out_5197492253302578706[51] = 0;
   out_5197492253302578706[52] = 0;
   out_5197492253302578706[53] = 0;
   out_5197492253302578706[54] = 0;
   out_5197492253302578706[55] = 0;
   out_5197492253302578706[56] = 0;
   out_5197492253302578706[57] = 0;
   out_5197492253302578706[58] = 0;
   out_5197492253302578706[59] = 0;
   out_5197492253302578706[60] = 0;
   out_5197492253302578706[61] = 0;
   out_5197492253302578706[62] = 0;
   out_5197492253302578706[63] = 0;
   out_5197492253302578706[64] = 0;
   out_5197492253302578706[65] = 0;
   out_5197492253302578706[66] = 1;
   out_5197492253302578706[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5197492253302578706[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5197492253302578706[69] = 0;
   out_5197492253302578706[70] = 0;
   out_5197492253302578706[71] = 0;
   out_5197492253302578706[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5197492253302578706[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197492253302578706[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197492253302578706[75] = 0;
   out_5197492253302578706[76] = 0;
   out_5197492253302578706[77] = 0;
   out_5197492253302578706[78] = 0;
   out_5197492253302578706[79] = 0;
   out_5197492253302578706[80] = 0;
   out_5197492253302578706[81] = 0;
   out_5197492253302578706[82] = 0;
   out_5197492253302578706[83] = 0;
   out_5197492253302578706[84] = 0;
   out_5197492253302578706[85] = 0;
   out_5197492253302578706[86] = 0;
   out_5197492253302578706[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5197492253302578706[88] = 1;
   out_5197492253302578706[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5197492253302578706[90] = 0;
   out_5197492253302578706[91] = 0;
   out_5197492253302578706[92] = 0;
   out_5197492253302578706[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197492253302578706[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5197492253302578706[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197492253302578706[96] = 0;
   out_5197492253302578706[97] = 0;
   out_5197492253302578706[98] = 0;
   out_5197492253302578706[99] = 0;
   out_5197492253302578706[100] = 0;
   out_5197492253302578706[101] = 0;
   out_5197492253302578706[102] = 0;
   out_5197492253302578706[103] = 0;
   out_5197492253302578706[104] = 0;
   out_5197492253302578706[105] = 0;
   out_5197492253302578706[106] = 0;
   out_5197492253302578706[107] = 0;
   out_5197492253302578706[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5197492253302578706[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5197492253302578706[110] = 1;
   out_5197492253302578706[111] = 0;
   out_5197492253302578706[112] = 0;
   out_5197492253302578706[113] = 0;
   out_5197492253302578706[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197492253302578706[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197492253302578706[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5197492253302578706[117] = 0;
   out_5197492253302578706[118] = 0;
   out_5197492253302578706[119] = 0;
   out_5197492253302578706[120] = 0;
   out_5197492253302578706[121] = 0;
   out_5197492253302578706[122] = 0;
   out_5197492253302578706[123] = 0;
   out_5197492253302578706[124] = 0;
   out_5197492253302578706[125] = 0;
   out_5197492253302578706[126] = 0;
   out_5197492253302578706[127] = 0;
   out_5197492253302578706[128] = 0;
   out_5197492253302578706[129] = 0;
   out_5197492253302578706[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5197492253302578706[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5197492253302578706[132] = 1;
   out_5197492253302578706[133] = 0;
   out_5197492253302578706[134] = 0;
   out_5197492253302578706[135] = 0;
   out_5197492253302578706[136] = 0;
   out_5197492253302578706[137] = 0;
   out_5197492253302578706[138] = 0;
   out_5197492253302578706[139] = 0;
   out_5197492253302578706[140] = 0;
   out_5197492253302578706[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5197492253302578706[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197492253302578706[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197492253302578706[144] = 0;
   out_5197492253302578706[145] = 0;
   out_5197492253302578706[146] = 0;
   out_5197492253302578706[147] = 0;
   out_5197492253302578706[148] = 0;
   out_5197492253302578706[149] = 0;
   out_5197492253302578706[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5197492253302578706[151] = 0;
   out_5197492253302578706[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5197492253302578706[153] = 0;
   out_5197492253302578706[154] = 1;
   out_5197492253302578706[155] = 0;
   out_5197492253302578706[156] = 0;
   out_5197492253302578706[157] = 0;
   out_5197492253302578706[158] = 0;
   out_5197492253302578706[159] = 0;
   out_5197492253302578706[160] = 0;
   out_5197492253302578706[161] = 0;
   out_5197492253302578706[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197492253302578706[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5197492253302578706[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197492253302578706[165] = 0;
   out_5197492253302578706[166] = 0;
   out_5197492253302578706[167] = 0;
   out_5197492253302578706[168] = 0;
   out_5197492253302578706[169] = 0;
   out_5197492253302578706[170] = 0;
   out_5197492253302578706[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5197492253302578706[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5197492253302578706[173] = 0;
   out_5197492253302578706[174] = 0;
   out_5197492253302578706[175] = 0;
   out_5197492253302578706[176] = 1;
   out_5197492253302578706[177] = 0;
   out_5197492253302578706[178] = 0;
   out_5197492253302578706[179] = 0;
   out_5197492253302578706[180] = 0;
   out_5197492253302578706[181] = 0;
   out_5197492253302578706[182] = 0;
   out_5197492253302578706[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197492253302578706[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197492253302578706[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5197492253302578706[186] = 0;
   out_5197492253302578706[187] = 0;
   out_5197492253302578706[188] = 0;
   out_5197492253302578706[189] = 0;
   out_5197492253302578706[190] = 0;
   out_5197492253302578706[191] = 0;
   out_5197492253302578706[192] = 0;
   out_5197492253302578706[193] = 0;
   out_5197492253302578706[194] = 0;
   out_5197492253302578706[195] = 0;
   out_5197492253302578706[196] = 0;
   out_5197492253302578706[197] = 0;
   out_5197492253302578706[198] = 1;
   out_5197492253302578706[199] = 0;
   out_5197492253302578706[200] = 0;
   out_5197492253302578706[201] = 0;
   out_5197492253302578706[202] = 0;
   out_5197492253302578706[203] = 0;
   out_5197492253302578706[204] = 0;
   out_5197492253302578706[205] = 0;
   out_5197492253302578706[206] = 0;
   out_5197492253302578706[207] = 0;
   out_5197492253302578706[208] = 0;
   out_5197492253302578706[209] = 0;
   out_5197492253302578706[210] = 0;
   out_5197492253302578706[211] = 0;
   out_5197492253302578706[212] = 0;
   out_5197492253302578706[213] = 0;
   out_5197492253302578706[214] = 0;
   out_5197492253302578706[215] = 0;
   out_5197492253302578706[216] = 0;
   out_5197492253302578706[217] = 0;
   out_5197492253302578706[218] = 0;
   out_5197492253302578706[219] = 0;
   out_5197492253302578706[220] = 1;
   out_5197492253302578706[221] = 0;
   out_5197492253302578706[222] = 0;
   out_5197492253302578706[223] = 0;
   out_5197492253302578706[224] = 0;
   out_5197492253302578706[225] = 0;
   out_5197492253302578706[226] = 0;
   out_5197492253302578706[227] = 0;
   out_5197492253302578706[228] = 0;
   out_5197492253302578706[229] = 0;
   out_5197492253302578706[230] = 0;
   out_5197492253302578706[231] = 0;
   out_5197492253302578706[232] = 0;
   out_5197492253302578706[233] = 0;
   out_5197492253302578706[234] = 0;
   out_5197492253302578706[235] = 0;
   out_5197492253302578706[236] = 0;
   out_5197492253302578706[237] = 0;
   out_5197492253302578706[238] = 0;
   out_5197492253302578706[239] = 0;
   out_5197492253302578706[240] = 0;
   out_5197492253302578706[241] = 0;
   out_5197492253302578706[242] = 1;
   out_5197492253302578706[243] = 0;
   out_5197492253302578706[244] = 0;
   out_5197492253302578706[245] = 0;
   out_5197492253302578706[246] = 0;
   out_5197492253302578706[247] = 0;
   out_5197492253302578706[248] = 0;
   out_5197492253302578706[249] = 0;
   out_5197492253302578706[250] = 0;
   out_5197492253302578706[251] = 0;
   out_5197492253302578706[252] = 0;
   out_5197492253302578706[253] = 0;
   out_5197492253302578706[254] = 0;
   out_5197492253302578706[255] = 0;
   out_5197492253302578706[256] = 0;
   out_5197492253302578706[257] = 0;
   out_5197492253302578706[258] = 0;
   out_5197492253302578706[259] = 0;
   out_5197492253302578706[260] = 0;
   out_5197492253302578706[261] = 0;
   out_5197492253302578706[262] = 0;
   out_5197492253302578706[263] = 0;
   out_5197492253302578706[264] = 1;
   out_5197492253302578706[265] = 0;
   out_5197492253302578706[266] = 0;
   out_5197492253302578706[267] = 0;
   out_5197492253302578706[268] = 0;
   out_5197492253302578706[269] = 0;
   out_5197492253302578706[270] = 0;
   out_5197492253302578706[271] = 0;
   out_5197492253302578706[272] = 0;
   out_5197492253302578706[273] = 0;
   out_5197492253302578706[274] = 0;
   out_5197492253302578706[275] = 0;
   out_5197492253302578706[276] = 0;
   out_5197492253302578706[277] = 0;
   out_5197492253302578706[278] = 0;
   out_5197492253302578706[279] = 0;
   out_5197492253302578706[280] = 0;
   out_5197492253302578706[281] = 0;
   out_5197492253302578706[282] = 0;
   out_5197492253302578706[283] = 0;
   out_5197492253302578706[284] = 0;
   out_5197492253302578706[285] = 0;
   out_5197492253302578706[286] = 1;
   out_5197492253302578706[287] = 0;
   out_5197492253302578706[288] = 0;
   out_5197492253302578706[289] = 0;
   out_5197492253302578706[290] = 0;
   out_5197492253302578706[291] = 0;
   out_5197492253302578706[292] = 0;
   out_5197492253302578706[293] = 0;
   out_5197492253302578706[294] = 0;
   out_5197492253302578706[295] = 0;
   out_5197492253302578706[296] = 0;
   out_5197492253302578706[297] = 0;
   out_5197492253302578706[298] = 0;
   out_5197492253302578706[299] = 0;
   out_5197492253302578706[300] = 0;
   out_5197492253302578706[301] = 0;
   out_5197492253302578706[302] = 0;
   out_5197492253302578706[303] = 0;
   out_5197492253302578706[304] = 0;
   out_5197492253302578706[305] = 0;
   out_5197492253302578706[306] = 0;
   out_5197492253302578706[307] = 0;
   out_5197492253302578706[308] = 1;
   out_5197492253302578706[309] = 0;
   out_5197492253302578706[310] = 0;
   out_5197492253302578706[311] = 0;
   out_5197492253302578706[312] = 0;
   out_5197492253302578706[313] = 0;
   out_5197492253302578706[314] = 0;
   out_5197492253302578706[315] = 0;
   out_5197492253302578706[316] = 0;
   out_5197492253302578706[317] = 0;
   out_5197492253302578706[318] = 0;
   out_5197492253302578706[319] = 0;
   out_5197492253302578706[320] = 0;
   out_5197492253302578706[321] = 0;
   out_5197492253302578706[322] = 0;
   out_5197492253302578706[323] = 0;
   out_5197492253302578706[324] = 0;
   out_5197492253302578706[325] = 0;
   out_5197492253302578706[326] = 0;
   out_5197492253302578706[327] = 0;
   out_5197492253302578706[328] = 0;
   out_5197492253302578706[329] = 0;
   out_5197492253302578706[330] = 1;
   out_5197492253302578706[331] = 0;
   out_5197492253302578706[332] = 0;
   out_5197492253302578706[333] = 0;
   out_5197492253302578706[334] = 0;
   out_5197492253302578706[335] = 0;
   out_5197492253302578706[336] = 0;
   out_5197492253302578706[337] = 0;
   out_5197492253302578706[338] = 0;
   out_5197492253302578706[339] = 0;
   out_5197492253302578706[340] = 0;
   out_5197492253302578706[341] = 0;
   out_5197492253302578706[342] = 0;
   out_5197492253302578706[343] = 0;
   out_5197492253302578706[344] = 0;
   out_5197492253302578706[345] = 0;
   out_5197492253302578706[346] = 0;
   out_5197492253302578706[347] = 0;
   out_5197492253302578706[348] = 0;
   out_5197492253302578706[349] = 0;
   out_5197492253302578706[350] = 0;
   out_5197492253302578706[351] = 0;
   out_5197492253302578706[352] = 1;
   out_5197492253302578706[353] = 0;
   out_5197492253302578706[354] = 0;
   out_5197492253302578706[355] = 0;
   out_5197492253302578706[356] = 0;
   out_5197492253302578706[357] = 0;
   out_5197492253302578706[358] = 0;
   out_5197492253302578706[359] = 0;
   out_5197492253302578706[360] = 0;
   out_5197492253302578706[361] = 0;
   out_5197492253302578706[362] = 0;
   out_5197492253302578706[363] = 0;
   out_5197492253302578706[364] = 0;
   out_5197492253302578706[365] = 0;
   out_5197492253302578706[366] = 0;
   out_5197492253302578706[367] = 0;
   out_5197492253302578706[368] = 0;
   out_5197492253302578706[369] = 0;
   out_5197492253302578706[370] = 0;
   out_5197492253302578706[371] = 0;
   out_5197492253302578706[372] = 0;
   out_5197492253302578706[373] = 0;
   out_5197492253302578706[374] = 1;
   out_5197492253302578706[375] = 0;
   out_5197492253302578706[376] = 0;
   out_5197492253302578706[377] = 0;
   out_5197492253302578706[378] = 0;
   out_5197492253302578706[379] = 0;
   out_5197492253302578706[380] = 0;
   out_5197492253302578706[381] = 0;
   out_5197492253302578706[382] = 0;
   out_5197492253302578706[383] = 0;
   out_5197492253302578706[384] = 0;
   out_5197492253302578706[385] = 0;
   out_5197492253302578706[386] = 0;
   out_5197492253302578706[387] = 0;
   out_5197492253302578706[388] = 0;
   out_5197492253302578706[389] = 0;
   out_5197492253302578706[390] = 0;
   out_5197492253302578706[391] = 0;
   out_5197492253302578706[392] = 0;
   out_5197492253302578706[393] = 0;
   out_5197492253302578706[394] = 0;
   out_5197492253302578706[395] = 0;
   out_5197492253302578706[396] = 1;
   out_5197492253302578706[397] = 0;
   out_5197492253302578706[398] = 0;
   out_5197492253302578706[399] = 0;
   out_5197492253302578706[400] = 0;
   out_5197492253302578706[401] = 0;
   out_5197492253302578706[402] = 0;
   out_5197492253302578706[403] = 0;
   out_5197492253302578706[404] = 0;
   out_5197492253302578706[405] = 0;
   out_5197492253302578706[406] = 0;
   out_5197492253302578706[407] = 0;
   out_5197492253302578706[408] = 0;
   out_5197492253302578706[409] = 0;
   out_5197492253302578706[410] = 0;
   out_5197492253302578706[411] = 0;
   out_5197492253302578706[412] = 0;
   out_5197492253302578706[413] = 0;
   out_5197492253302578706[414] = 0;
   out_5197492253302578706[415] = 0;
   out_5197492253302578706[416] = 0;
   out_5197492253302578706[417] = 0;
   out_5197492253302578706[418] = 1;
   out_5197492253302578706[419] = 0;
   out_5197492253302578706[420] = 0;
   out_5197492253302578706[421] = 0;
   out_5197492253302578706[422] = 0;
   out_5197492253302578706[423] = 0;
   out_5197492253302578706[424] = 0;
   out_5197492253302578706[425] = 0;
   out_5197492253302578706[426] = 0;
   out_5197492253302578706[427] = 0;
   out_5197492253302578706[428] = 0;
   out_5197492253302578706[429] = 0;
   out_5197492253302578706[430] = 0;
   out_5197492253302578706[431] = 0;
   out_5197492253302578706[432] = 0;
   out_5197492253302578706[433] = 0;
   out_5197492253302578706[434] = 0;
   out_5197492253302578706[435] = 0;
   out_5197492253302578706[436] = 0;
   out_5197492253302578706[437] = 0;
   out_5197492253302578706[438] = 0;
   out_5197492253302578706[439] = 0;
   out_5197492253302578706[440] = 1;
}
void h_4(double *state, double *unused, double *out_7014553232075907042) {
   out_7014553232075907042[0] = state[10] + state[13];
   out_7014553232075907042[1] = state[11] + state[14];
   out_7014553232075907042[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_48671540338297278) {
   out_48671540338297278[0] = 0;
   out_48671540338297278[1] = 0;
   out_48671540338297278[2] = 0;
   out_48671540338297278[3] = 0;
   out_48671540338297278[4] = 0;
   out_48671540338297278[5] = 0;
   out_48671540338297278[6] = 0;
   out_48671540338297278[7] = 0;
   out_48671540338297278[8] = 0;
   out_48671540338297278[9] = 0;
   out_48671540338297278[10] = 1;
   out_48671540338297278[11] = 0;
   out_48671540338297278[12] = 0;
   out_48671540338297278[13] = 1;
   out_48671540338297278[14] = 0;
   out_48671540338297278[15] = 0;
   out_48671540338297278[16] = 0;
   out_48671540338297278[17] = 0;
   out_48671540338297278[18] = 0;
   out_48671540338297278[19] = 0;
   out_48671540338297278[20] = 0;
   out_48671540338297278[21] = 0;
   out_48671540338297278[22] = 0;
   out_48671540338297278[23] = 0;
   out_48671540338297278[24] = 0;
   out_48671540338297278[25] = 0;
   out_48671540338297278[26] = 0;
   out_48671540338297278[27] = 0;
   out_48671540338297278[28] = 0;
   out_48671540338297278[29] = 0;
   out_48671540338297278[30] = 0;
   out_48671540338297278[31] = 0;
   out_48671540338297278[32] = 0;
   out_48671540338297278[33] = 1;
   out_48671540338297278[34] = 0;
   out_48671540338297278[35] = 0;
   out_48671540338297278[36] = 1;
   out_48671540338297278[37] = 0;
   out_48671540338297278[38] = 0;
   out_48671540338297278[39] = 0;
   out_48671540338297278[40] = 0;
   out_48671540338297278[41] = 0;
   out_48671540338297278[42] = 0;
   out_48671540338297278[43] = 0;
   out_48671540338297278[44] = 0;
   out_48671540338297278[45] = 0;
   out_48671540338297278[46] = 0;
   out_48671540338297278[47] = 0;
   out_48671540338297278[48] = 0;
   out_48671540338297278[49] = 0;
   out_48671540338297278[50] = 0;
   out_48671540338297278[51] = 0;
   out_48671540338297278[52] = 0;
   out_48671540338297278[53] = 0;
   out_48671540338297278[54] = 0;
   out_48671540338297278[55] = 0;
   out_48671540338297278[56] = 1;
   out_48671540338297278[57] = 0;
   out_48671540338297278[58] = 0;
   out_48671540338297278[59] = 1;
   out_48671540338297278[60] = 0;
   out_48671540338297278[61] = 0;
   out_48671540338297278[62] = 0;
   out_48671540338297278[63] = 0;
   out_48671540338297278[64] = 0;
   out_48671540338297278[65] = 0;
}
void h_9(double *state, double *unused, double *out_108663546386961525) {
   out_108663546386961525[0] = state[10];
   out_108663546386961525[1] = state[11];
   out_108663546386961525[2] = state[12];
}
void H_9(double *state, double *unused, double *out_289861186967887923) {
   out_289861186967887923[0] = 0;
   out_289861186967887923[1] = 0;
   out_289861186967887923[2] = 0;
   out_289861186967887923[3] = 0;
   out_289861186967887923[4] = 0;
   out_289861186967887923[5] = 0;
   out_289861186967887923[6] = 0;
   out_289861186967887923[7] = 0;
   out_289861186967887923[8] = 0;
   out_289861186967887923[9] = 0;
   out_289861186967887923[10] = 1;
   out_289861186967887923[11] = 0;
   out_289861186967887923[12] = 0;
   out_289861186967887923[13] = 0;
   out_289861186967887923[14] = 0;
   out_289861186967887923[15] = 0;
   out_289861186967887923[16] = 0;
   out_289861186967887923[17] = 0;
   out_289861186967887923[18] = 0;
   out_289861186967887923[19] = 0;
   out_289861186967887923[20] = 0;
   out_289861186967887923[21] = 0;
   out_289861186967887923[22] = 0;
   out_289861186967887923[23] = 0;
   out_289861186967887923[24] = 0;
   out_289861186967887923[25] = 0;
   out_289861186967887923[26] = 0;
   out_289861186967887923[27] = 0;
   out_289861186967887923[28] = 0;
   out_289861186967887923[29] = 0;
   out_289861186967887923[30] = 0;
   out_289861186967887923[31] = 0;
   out_289861186967887923[32] = 0;
   out_289861186967887923[33] = 1;
   out_289861186967887923[34] = 0;
   out_289861186967887923[35] = 0;
   out_289861186967887923[36] = 0;
   out_289861186967887923[37] = 0;
   out_289861186967887923[38] = 0;
   out_289861186967887923[39] = 0;
   out_289861186967887923[40] = 0;
   out_289861186967887923[41] = 0;
   out_289861186967887923[42] = 0;
   out_289861186967887923[43] = 0;
   out_289861186967887923[44] = 0;
   out_289861186967887923[45] = 0;
   out_289861186967887923[46] = 0;
   out_289861186967887923[47] = 0;
   out_289861186967887923[48] = 0;
   out_289861186967887923[49] = 0;
   out_289861186967887923[50] = 0;
   out_289861186967887923[51] = 0;
   out_289861186967887923[52] = 0;
   out_289861186967887923[53] = 0;
   out_289861186967887923[54] = 0;
   out_289861186967887923[55] = 0;
   out_289861186967887923[56] = 1;
   out_289861186967887923[57] = 0;
   out_289861186967887923[58] = 0;
   out_289861186967887923[59] = 0;
   out_289861186967887923[60] = 0;
   out_289861186967887923[61] = 0;
   out_289861186967887923[62] = 0;
   out_289861186967887923[63] = 0;
   out_289861186967887923[64] = 0;
   out_289861186967887923[65] = 0;
}
void h_10(double *state, double *unused, double *out_4906287204831309256) {
   out_4906287204831309256[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4906287204831309256[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4906287204831309256[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2357670500591332152) {
   out_2357670500591332152[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2357670500591332152[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2357670500591332152[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2357670500591332152[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2357670500591332152[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2357670500591332152[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2357670500591332152[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2357670500591332152[7] = 0;
   out_2357670500591332152[8] = 0;
   out_2357670500591332152[9] = 0;
   out_2357670500591332152[10] = 0;
   out_2357670500591332152[11] = 0;
   out_2357670500591332152[12] = 0;
   out_2357670500591332152[13] = 0;
   out_2357670500591332152[14] = 0;
   out_2357670500591332152[15] = 0;
   out_2357670500591332152[16] = 1;
   out_2357670500591332152[17] = 0;
   out_2357670500591332152[18] = 0;
   out_2357670500591332152[19] = 1;
   out_2357670500591332152[20] = 0;
   out_2357670500591332152[21] = 0;
   out_2357670500591332152[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2357670500591332152[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2357670500591332152[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2357670500591332152[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2357670500591332152[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2357670500591332152[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2357670500591332152[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2357670500591332152[29] = 0;
   out_2357670500591332152[30] = 0;
   out_2357670500591332152[31] = 0;
   out_2357670500591332152[32] = 0;
   out_2357670500591332152[33] = 0;
   out_2357670500591332152[34] = 0;
   out_2357670500591332152[35] = 0;
   out_2357670500591332152[36] = 0;
   out_2357670500591332152[37] = 0;
   out_2357670500591332152[38] = 0;
   out_2357670500591332152[39] = 1;
   out_2357670500591332152[40] = 0;
   out_2357670500591332152[41] = 0;
   out_2357670500591332152[42] = 1;
   out_2357670500591332152[43] = 0;
   out_2357670500591332152[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2357670500591332152[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2357670500591332152[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2357670500591332152[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2357670500591332152[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2357670500591332152[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2357670500591332152[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2357670500591332152[51] = 0;
   out_2357670500591332152[52] = 0;
   out_2357670500591332152[53] = 0;
   out_2357670500591332152[54] = 0;
   out_2357670500591332152[55] = 0;
   out_2357670500591332152[56] = 0;
   out_2357670500591332152[57] = 0;
   out_2357670500591332152[58] = 0;
   out_2357670500591332152[59] = 0;
   out_2357670500591332152[60] = 0;
   out_2357670500591332152[61] = 0;
   out_2357670500591332152[62] = 1;
   out_2357670500591332152[63] = 0;
   out_2357670500591332152[64] = 0;
   out_2357670500591332152[65] = 1;
}
void h_12(double *state, double *unused, double *out_5667340936158651549) {
   out_5667340936158651549[0] = state[0];
   out_5667340936158651549[1] = state[1];
   out_5667340936158651549[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5068127948370259073) {
   out_5068127948370259073[0] = 1;
   out_5068127948370259073[1] = 0;
   out_5068127948370259073[2] = 0;
   out_5068127948370259073[3] = 0;
   out_5068127948370259073[4] = 0;
   out_5068127948370259073[5] = 0;
   out_5068127948370259073[6] = 0;
   out_5068127948370259073[7] = 0;
   out_5068127948370259073[8] = 0;
   out_5068127948370259073[9] = 0;
   out_5068127948370259073[10] = 0;
   out_5068127948370259073[11] = 0;
   out_5068127948370259073[12] = 0;
   out_5068127948370259073[13] = 0;
   out_5068127948370259073[14] = 0;
   out_5068127948370259073[15] = 0;
   out_5068127948370259073[16] = 0;
   out_5068127948370259073[17] = 0;
   out_5068127948370259073[18] = 0;
   out_5068127948370259073[19] = 0;
   out_5068127948370259073[20] = 0;
   out_5068127948370259073[21] = 0;
   out_5068127948370259073[22] = 0;
   out_5068127948370259073[23] = 1;
   out_5068127948370259073[24] = 0;
   out_5068127948370259073[25] = 0;
   out_5068127948370259073[26] = 0;
   out_5068127948370259073[27] = 0;
   out_5068127948370259073[28] = 0;
   out_5068127948370259073[29] = 0;
   out_5068127948370259073[30] = 0;
   out_5068127948370259073[31] = 0;
   out_5068127948370259073[32] = 0;
   out_5068127948370259073[33] = 0;
   out_5068127948370259073[34] = 0;
   out_5068127948370259073[35] = 0;
   out_5068127948370259073[36] = 0;
   out_5068127948370259073[37] = 0;
   out_5068127948370259073[38] = 0;
   out_5068127948370259073[39] = 0;
   out_5068127948370259073[40] = 0;
   out_5068127948370259073[41] = 0;
   out_5068127948370259073[42] = 0;
   out_5068127948370259073[43] = 0;
   out_5068127948370259073[44] = 0;
   out_5068127948370259073[45] = 0;
   out_5068127948370259073[46] = 1;
   out_5068127948370259073[47] = 0;
   out_5068127948370259073[48] = 0;
   out_5068127948370259073[49] = 0;
   out_5068127948370259073[50] = 0;
   out_5068127948370259073[51] = 0;
   out_5068127948370259073[52] = 0;
   out_5068127948370259073[53] = 0;
   out_5068127948370259073[54] = 0;
   out_5068127948370259073[55] = 0;
   out_5068127948370259073[56] = 0;
   out_5068127948370259073[57] = 0;
   out_5068127948370259073[58] = 0;
   out_5068127948370259073[59] = 0;
   out_5068127948370259073[60] = 0;
   out_5068127948370259073[61] = 0;
   out_5068127948370259073[62] = 0;
   out_5068127948370259073[63] = 0;
   out_5068127948370259073[64] = 0;
   out_5068127948370259073[65] = 0;
}
void h_31(double *state, double *unused, double *out_1338021097045339986) {
   out_1338021097045339986[0] = state[7];
   out_1338021097045339986[1] = state[8];
   out_1338021097045339986[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3415333597710904654) {
   out_3415333597710904654[0] = 0;
   out_3415333597710904654[1] = 0;
   out_3415333597710904654[2] = 0;
   out_3415333597710904654[3] = 0;
   out_3415333597710904654[4] = 0;
   out_3415333597710904654[5] = 0;
   out_3415333597710904654[6] = 0;
   out_3415333597710904654[7] = 1;
   out_3415333597710904654[8] = 0;
   out_3415333597710904654[9] = 0;
   out_3415333597710904654[10] = 0;
   out_3415333597710904654[11] = 0;
   out_3415333597710904654[12] = 0;
   out_3415333597710904654[13] = 0;
   out_3415333597710904654[14] = 0;
   out_3415333597710904654[15] = 0;
   out_3415333597710904654[16] = 0;
   out_3415333597710904654[17] = 0;
   out_3415333597710904654[18] = 0;
   out_3415333597710904654[19] = 0;
   out_3415333597710904654[20] = 0;
   out_3415333597710904654[21] = 0;
   out_3415333597710904654[22] = 0;
   out_3415333597710904654[23] = 0;
   out_3415333597710904654[24] = 0;
   out_3415333597710904654[25] = 0;
   out_3415333597710904654[26] = 0;
   out_3415333597710904654[27] = 0;
   out_3415333597710904654[28] = 0;
   out_3415333597710904654[29] = 0;
   out_3415333597710904654[30] = 1;
   out_3415333597710904654[31] = 0;
   out_3415333597710904654[32] = 0;
   out_3415333597710904654[33] = 0;
   out_3415333597710904654[34] = 0;
   out_3415333597710904654[35] = 0;
   out_3415333597710904654[36] = 0;
   out_3415333597710904654[37] = 0;
   out_3415333597710904654[38] = 0;
   out_3415333597710904654[39] = 0;
   out_3415333597710904654[40] = 0;
   out_3415333597710904654[41] = 0;
   out_3415333597710904654[42] = 0;
   out_3415333597710904654[43] = 0;
   out_3415333597710904654[44] = 0;
   out_3415333597710904654[45] = 0;
   out_3415333597710904654[46] = 0;
   out_3415333597710904654[47] = 0;
   out_3415333597710904654[48] = 0;
   out_3415333597710904654[49] = 0;
   out_3415333597710904654[50] = 0;
   out_3415333597710904654[51] = 0;
   out_3415333597710904654[52] = 0;
   out_3415333597710904654[53] = 1;
   out_3415333597710904654[54] = 0;
   out_3415333597710904654[55] = 0;
   out_3415333597710904654[56] = 0;
   out_3415333597710904654[57] = 0;
   out_3415333597710904654[58] = 0;
   out_3415333597710904654[59] = 0;
   out_3415333597710904654[60] = 0;
   out_3415333597710904654[61] = 0;
   out_3415333597710904654[62] = 0;
   out_3415333597710904654[63] = 0;
   out_3415333597710904654[64] = 0;
   out_3415333597710904654[65] = 0;
}
void h_32(double *state, double *unused, double *out_6899534750071656641) {
   out_6899534750071656641[0] = state[3];
   out_6899534750071656641[1] = state[4];
   out_6899534750071656641[2] = state[5];
   out_6899534750071656641[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4927209557846818286) {
   out_4927209557846818286[0] = 0;
   out_4927209557846818286[1] = 0;
   out_4927209557846818286[2] = 0;
   out_4927209557846818286[3] = 1;
   out_4927209557846818286[4] = 0;
   out_4927209557846818286[5] = 0;
   out_4927209557846818286[6] = 0;
   out_4927209557846818286[7] = 0;
   out_4927209557846818286[8] = 0;
   out_4927209557846818286[9] = 0;
   out_4927209557846818286[10] = 0;
   out_4927209557846818286[11] = 0;
   out_4927209557846818286[12] = 0;
   out_4927209557846818286[13] = 0;
   out_4927209557846818286[14] = 0;
   out_4927209557846818286[15] = 0;
   out_4927209557846818286[16] = 0;
   out_4927209557846818286[17] = 0;
   out_4927209557846818286[18] = 0;
   out_4927209557846818286[19] = 0;
   out_4927209557846818286[20] = 0;
   out_4927209557846818286[21] = 0;
   out_4927209557846818286[22] = 0;
   out_4927209557846818286[23] = 0;
   out_4927209557846818286[24] = 0;
   out_4927209557846818286[25] = 0;
   out_4927209557846818286[26] = 1;
   out_4927209557846818286[27] = 0;
   out_4927209557846818286[28] = 0;
   out_4927209557846818286[29] = 0;
   out_4927209557846818286[30] = 0;
   out_4927209557846818286[31] = 0;
   out_4927209557846818286[32] = 0;
   out_4927209557846818286[33] = 0;
   out_4927209557846818286[34] = 0;
   out_4927209557846818286[35] = 0;
   out_4927209557846818286[36] = 0;
   out_4927209557846818286[37] = 0;
   out_4927209557846818286[38] = 0;
   out_4927209557846818286[39] = 0;
   out_4927209557846818286[40] = 0;
   out_4927209557846818286[41] = 0;
   out_4927209557846818286[42] = 0;
   out_4927209557846818286[43] = 0;
   out_4927209557846818286[44] = 0;
   out_4927209557846818286[45] = 0;
   out_4927209557846818286[46] = 0;
   out_4927209557846818286[47] = 0;
   out_4927209557846818286[48] = 0;
   out_4927209557846818286[49] = 1;
   out_4927209557846818286[50] = 0;
   out_4927209557846818286[51] = 0;
   out_4927209557846818286[52] = 0;
   out_4927209557846818286[53] = 0;
   out_4927209557846818286[54] = 0;
   out_4927209557846818286[55] = 0;
   out_4927209557846818286[56] = 0;
   out_4927209557846818286[57] = 0;
   out_4927209557846818286[58] = 0;
   out_4927209557846818286[59] = 0;
   out_4927209557846818286[60] = 0;
   out_4927209557846818286[61] = 0;
   out_4927209557846818286[62] = 0;
   out_4927209557846818286[63] = 0;
   out_4927209557846818286[64] = 0;
   out_4927209557846818286[65] = 0;
   out_4927209557846818286[66] = 0;
   out_4927209557846818286[67] = 0;
   out_4927209557846818286[68] = 0;
   out_4927209557846818286[69] = 0;
   out_4927209557846818286[70] = 0;
   out_4927209557846818286[71] = 0;
   out_4927209557846818286[72] = 1;
   out_4927209557846818286[73] = 0;
   out_4927209557846818286[74] = 0;
   out_4927209557846818286[75] = 0;
   out_4927209557846818286[76] = 0;
   out_4927209557846818286[77] = 0;
   out_4927209557846818286[78] = 0;
   out_4927209557846818286[79] = 0;
   out_4927209557846818286[80] = 0;
   out_4927209557846818286[81] = 0;
   out_4927209557846818286[82] = 0;
   out_4927209557846818286[83] = 0;
   out_4927209557846818286[84] = 0;
   out_4927209557846818286[85] = 0;
   out_4927209557846818286[86] = 0;
   out_4927209557846818286[87] = 0;
}
void h_13(double *state, double *unused, double *out_5121156266088859451) {
   out_5121156266088859451[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5121156266088859451[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5121156266088859451[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8738892226839846620) {
   out_8738892226839846620[0] = 0;
   out_8738892226839846620[1] = 0;
   out_8738892226839846620[2] = 0;
   out_8738892226839846620[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8738892226839846620[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738892226839846620[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8738892226839846620[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8738892226839846620[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8738892226839846620[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8738892226839846620[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8738892226839846620[10] = 0;
   out_8738892226839846620[11] = 0;
   out_8738892226839846620[12] = 0;
   out_8738892226839846620[13] = 0;
   out_8738892226839846620[14] = 0;
   out_8738892226839846620[15] = 0;
   out_8738892226839846620[16] = 0;
   out_8738892226839846620[17] = 0;
   out_8738892226839846620[18] = 0;
   out_8738892226839846620[19] = 0;
   out_8738892226839846620[20] = 0;
   out_8738892226839846620[21] = 0;
   out_8738892226839846620[22] = 0;
   out_8738892226839846620[23] = 0;
   out_8738892226839846620[24] = 0;
   out_8738892226839846620[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8738892226839846620[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8738892226839846620[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738892226839846620[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8738892226839846620[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8738892226839846620[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8738892226839846620[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8738892226839846620[32] = 0;
   out_8738892226839846620[33] = 0;
   out_8738892226839846620[34] = 0;
   out_8738892226839846620[35] = 0;
   out_8738892226839846620[36] = 0;
   out_8738892226839846620[37] = 0;
   out_8738892226839846620[38] = 0;
   out_8738892226839846620[39] = 0;
   out_8738892226839846620[40] = 0;
   out_8738892226839846620[41] = 0;
   out_8738892226839846620[42] = 0;
   out_8738892226839846620[43] = 0;
   out_8738892226839846620[44] = 0;
   out_8738892226839846620[45] = 0;
   out_8738892226839846620[46] = 0;
   out_8738892226839846620[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8738892226839846620[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8738892226839846620[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8738892226839846620[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738892226839846620[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8738892226839846620[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8738892226839846620[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8738892226839846620[54] = 0;
   out_8738892226839846620[55] = 0;
   out_8738892226839846620[56] = 0;
   out_8738892226839846620[57] = 0;
   out_8738892226839846620[58] = 0;
   out_8738892226839846620[59] = 0;
   out_8738892226839846620[60] = 0;
   out_8738892226839846620[61] = 0;
   out_8738892226839846620[62] = 0;
   out_8738892226839846620[63] = 0;
   out_8738892226839846620[64] = 0;
   out_8738892226839846620[65] = 0;
}
void h_14(double *state, double *unused, double *out_108663546386961525) {
   out_108663546386961525[0] = state[10];
   out_108663546386961525[1] = state[11];
   out_108663546386961525[2] = state[12];
}
void H_14(double *state, double *unused, double *out_289861186967887923) {
   out_289861186967887923[0] = 0;
   out_289861186967887923[1] = 0;
   out_289861186967887923[2] = 0;
   out_289861186967887923[3] = 0;
   out_289861186967887923[4] = 0;
   out_289861186967887923[5] = 0;
   out_289861186967887923[6] = 0;
   out_289861186967887923[7] = 0;
   out_289861186967887923[8] = 0;
   out_289861186967887923[9] = 0;
   out_289861186967887923[10] = 1;
   out_289861186967887923[11] = 0;
   out_289861186967887923[12] = 0;
   out_289861186967887923[13] = 0;
   out_289861186967887923[14] = 0;
   out_289861186967887923[15] = 0;
   out_289861186967887923[16] = 0;
   out_289861186967887923[17] = 0;
   out_289861186967887923[18] = 0;
   out_289861186967887923[19] = 0;
   out_289861186967887923[20] = 0;
   out_289861186967887923[21] = 0;
   out_289861186967887923[22] = 0;
   out_289861186967887923[23] = 0;
   out_289861186967887923[24] = 0;
   out_289861186967887923[25] = 0;
   out_289861186967887923[26] = 0;
   out_289861186967887923[27] = 0;
   out_289861186967887923[28] = 0;
   out_289861186967887923[29] = 0;
   out_289861186967887923[30] = 0;
   out_289861186967887923[31] = 0;
   out_289861186967887923[32] = 0;
   out_289861186967887923[33] = 1;
   out_289861186967887923[34] = 0;
   out_289861186967887923[35] = 0;
   out_289861186967887923[36] = 0;
   out_289861186967887923[37] = 0;
   out_289861186967887923[38] = 0;
   out_289861186967887923[39] = 0;
   out_289861186967887923[40] = 0;
   out_289861186967887923[41] = 0;
   out_289861186967887923[42] = 0;
   out_289861186967887923[43] = 0;
   out_289861186967887923[44] = 0;
   out_289861186967887923[45] = 0;
   out_289861186967887923[46] = 0;
   out_289861186967887923[47] = 0;
   out_289861186967887923[48] = 0;
   out_289861186967887923[49] = 0;
   out_289861186967887923[50] = 0;
   out_289861186967887923[51] = 0;
   out_289861186967887923[52] = 0;
   out_289861186967887923[53] = 0;
   out_289861186967887923[54] = 0;
   out_289861186967887923[55] = 0;
   out_289861186967887923[56] = 1;
   out_289861186967887923[57] = 0;
   out_289861186967887923[58] = 0;
   out_289861186967887923[59] = 0;
   out_289861186967887923[60] = 0;
   out_289861186967887923[61] = 0;
   out_289861186967887923[62] = 0;
   out_289861186967887923[63] = 0;
   out_289861186967887923[64] = 0;
   out_289861186967887923[65] = 0;
}
void h_33(double *state, double *unused, double *out_4129557182372481520) {
   out_4129557182372481520[0] = state[16];
   out_4129557182372481520[1] = state[17];
   out_4129557182372481520[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6565890602349762258) {
   out_6565890602349762258[0] = 0;
   out_6565890602349762258[1] = 0;
   out_6565890602349762258[2] = 0;
   out_6565890602349762258[3] = 0;
   out_6565890602349762258[4] = 0;
   out_6565890602349762258[5] = 0;
   out_6565890602349762258[6] = 0;
   out_6565890602349762258[7] = 0;
   out_6565890602349762258[8] = 0;
   out_6565890602349762258[9] = 0;
   out_6565890602349762258[10] = 0;
   out_6565890602349762258[11] = 0;
   out_6565890602349762258[12] = 0;
   out_6565890602349762258[13] = 0;
   out_6565890602349762258[14] = 0;
   out_6565890602349762258[15] = 0;
   out_6565890602349762258[16] = 1;
   out_6565890602349762258[17] = 0;
   out_6565890602349762258[18] = 0;
   out_6565890602349762258[19] = 0;
   out_6565890602349762258[20] = 0;
   out_6565890602349762258[21] = 0;
   out_6565890602349762258[22] = 0;
   out_6565890602349762258[23] = 0;
   out_6565890602349762258[24] = 0;
   out_6565890602349762258[25] = 0;
   out_6565890602349762258[26] = 0;
   out_6565890602349762258[27] = 0;
   out_6565890602349762258[28] = 0;
   out_6565890602349762258[29] = 0;
   out_6565890602349762258[30] = 0;
   out_6565890602349762258[31] = 0;
   out_6565890602349762258[32] = 0;
   out_6565890602349762258[33] = 0;
   out_6565890602349762258[34] = 0;
   out_6565890602349762258[35] = 0;
   out_6565890602349762258[36] = 0;
   out_6565890602349762258[37] = 0;
   out_6565890602349762258[38] = 0;
   out_6565890602349762258[39] = 1;
   out_6565890602349762258[40] = 0;
   out_6565890602349762258[41] = 0;
   out_6565890602349762258[42] = 0;
   out_6565890602349762258[43] = 0;
   out_6565890602349762258[44] = 0;
   out_6565890602349762258[45] = 0;
   out_6565890602349762258[46] = 0;
   out_6565890602349762258[47] = 0;
   out_6565890602349762258[48] = 0;
   out_6565890602349762258[49] = 0;
   out_6565890602349762258[50] = 0;
   out_6565890602349762258[51] = 0;
   out_6565890602349762258[52] = 0;
   out_6565890602349762258[53] = 0;
   out_6565890602349762258[54] = 0;
   out_6565890602349762258[55] = 0;
   out_6565890602349762258[56] = 0;
   out_6565890602349762258[57] = 0;
   out_6565890602349762258[58] = 0;
   out_6565890602349762258[59] = 0;
   out_6565890602349762258[60] = 0;
   out_6565890602349762258[61] = 0;
   out_6565890602349762258[62] = 1;
   out_6565890602349762258[63] = 0;
   out_6565890602349762258[64] = 0;
   out_6565890602349762258[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7152185926377700488) {
  H(in_vec, out_7152185926377700488);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3950646692998680769) {
  err_fun(nom_x, delta_x, out_3950646692998680769);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3626463882087283498) {
  inv_err_fun(nom_x, true_x, out_3626463882087283498);
}
void live_H_mod_fun(double *state, double *out_7313751890375090654) {
  H_mod_fun(state, out_7313751890375090654);
}
void live_f_fun(double *state, double dt, double *out_3447414059194549864) {
  f_fun(state,  dt, out_3447414059194549864);
}
void live_F_fun(double *state, double dt, double *out_5197492253302578706) {
  F_fun(state,  dt, out_5197492253302578706);
}
void live_h_4(double *state, double *unused, double *out_7014553232075907042) {
  h_4(state, unused, out_7014553232075907042);
}
void live_H_4(double *state, double *unused, double *out_48671540338297278) {
  H_4(state, unused, out_48671540338297278);
}
void live_h_9(double *state, double *unused, double *out_108663546386961525) {
  h_9(state, unused, out_108663546386961525);
}
void live_H_9(double *state, double *unused, double *out_289861186967887923) {
  H_9(state, unused, out_289861186967887923);
}
void live_h_10(double *state, double *unused, double *out_4906287204831309256) {
  h_10(state, unused, out_4906287204831309256);
}
void live_H_10(double *state, double *unused, double *out_2357670500591332152) {
  H_10(state, unused, out_2357670500591332152);
}
void live_h_12(double *state, double *unused, double *out_5667340936158651549) {
  h_12(state, unused, out_5667340936158651549);
}
void live_H_12(double *state, double *unused, double *out_5068127948370259073) {
  H_12(state, unused, out_5068127948370259073);
}
void live_h_31(double *state, double *unused, double *out_1338021097045339986) {
  h_31(state, unused, out_1338021097045339986);
}
void live_H_31(double *state, double *unused, double *out_3415333597710904654) {
  H_31(state, unused, out_3415333597710904654);
}
void live_h_32(double *state, double *unused, double *out_6899534750071656641) {
  h_32(state, unused, out_6899534750071656641);
}
void live_H_32(double *state, double *unused, double *out_4927209557846818286) {
  H_32(state, unused, out_4927209557846818286);
}
void live_h_13(double *state, double *unused, double *out_5121156266088859451) {
  h_13(state, unused, out_5121156266088859451);
}
void live_H_13(double *state, double *unused, double *out_8738892226839846620) {
  H_13(state, unused, out_8738892226839846620);
}
void live_h_14(double *state, double *unused, double *out_108663546386961525) {
  h_14(state, unused, out_108663546386961525);
}
void live_H_14(double *state, double *unused, double *out_289861186967887923) {
  H_14(state, unused, out_289861186967887923);
}
void live_h_33(double *state, double *unused, double *out_4129557182372481520) {
  h_33(state, unused, out_4129557182372481520);
}
void live_H_33(double *state, double *unused, double *out_6565890602349762258) {
  H_33(state, unused, out_6565890602349762258);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
